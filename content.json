{"meta":{"title":"庄煜昱de博客","subtitle":"记录成长点滴","description":"学习心得·热点评论·生活感悟","author":"庄煜昱","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"一个文科生折腾Hexo+GitHub的血泪史","slug":"一个文科生折腾Hexo-GitHub的血泪史","date":"2017-03-02T13:47:08.000Z","updated":"2017-03-04T16:45:02.714Z","comments":true,"path":"2017/03/02/一个文科生折腾Hexo-GitHub的血泪史/","link":"","permalink":"http://yoursite.com/2017/03/02/一个文科生折腾Hexo-GitHub的血泪史/","excerpt":"一个文科生，真的无法在这个代码的世界里生存吗？By 尼古拉斯·赵四 周二早晨（现在是周四），我在班车上刷知乎，寻找睡意，一个叫 崔斯特 的家伙一篇专栏文章 教你免费搭建个人博客，Hexo&amp;Github 突然出现在我的timeline上，于是我百无聊赖地点进去，这一点不得了，一扇通往未知世界的大门自此打开，充满好奇的本宝宝义无反顾地跳了进去，带着无畏的勇气，我用自己的肉身体验了建站路上一个又一个的坑，短短48小时，懵逼了无数次，历尽千难万险之后，终于把自己的 博客 弄了出来，回首已经过去的48小时，我心潮澎湃，不能自己，非常确定以及肯定了这个代码世界对于文科生的恶意，于是，我暗暗咬了下嘴唇，迎着夕阳立下一个心愿：我一定要写一篇文科生能看懂的建站教程。 此为前言。","text":"一个文科生，真的无法在这个代码的世界里生存吗？By 尼古拉斯·赵四 周二早晨（现在是周四），我在班车上刷知乎，寻找睡意，一个叫 崔斯特 的家伙一篇专栏文章 教你免费搭建个人博客，Hexo&amp;Github 突然出现在我的timeline上，于是我百无聊赖地点进去，这一点不得了，一扇通往未知世界的大门自此打开，充满好奇的本宝宝义无反顾地跳了进去，带着无畏的勇气，我用自己的肉身体验了建站路上一个又一个的坑，短短48小时，懵逼了无数次，历尽千难万险之后，终于把自己的 博客 弄了出来，回首已经过去的48小时，我心潮澎湃，不能自己，非常确定以及肯定了这个代码世界对于文科生的恶意，于是，我暗暗咬了下嘴唇，迎着夕阳立下一个心愿：我一定要写一篇文科生能看懂的建站教程。 此为前言。 崔斯特先生的文章 教你免费搭建个人博客，Hexo&amp;Github 其实讲的蛮深入浅出的，特别是和我后来从度娘上扒回来的其他教程对比，操作性满分，可是，几乎所有教程都有一个问题，谈到建站，马上就是“什么是Hexo？”啊，“如何配置GitHub”啊这些干货满满的内容，可人家是文科生啊，没有一点点心理准备你就跟我讲环境配置，尽管我非常努力地看下去了，但是我的内心一直都是懵逼的…… 对的，事实上…… 为什么要下载node？为什么要下载Git？为什么要注册GitHub？为什么要敲那些指令？为什要改_config.xml的配置？ 为什么要下载sublime来编辑文档？Windows不是自带了一个记事本吗？Markdown又是什么鬼？写字就写字，搞这些乱七八糟的符号有什么用，不会用word吗？ 还要编译，编译是什么鬼？还有，要新建一个仓库哟，英文叫repository，这又是什么意思？还有还有，要去注册一个.me的域名，逼格才高，不过要做好映射哟亲…… 我艹，为什么呀，映射到底是什么东西呀？这些东西你们都是默认大家懂的吗？作为一个教程这么高冷好吗？！ 面对这些教程，我只想认真地说： 这个代码的世界充满了对文科生的歧视，为了打破这种不平等，我呕心沥血72个小时，终于整出来一份真正的入门级教程，只要你有正常的阅读能力和基本的英语水平，你就能明白上面那些名词的意思，你就能知道其实并没有那么复杂，之所以看起来那么复杂，只不过是理科生们讲不清楚而已。 本教程依赖于 崔斯特先生 的教程。 开始之前，理清思路在开始之前，我们先把思路捋一捋。 我们的目标是想搭建一个拥有独立域名的，逼格满满的个人博客。 那么，第一件事就是必须搞清楚，博客是什么。 不十分精确地说，它一个网站平台，它由许多个网页，按照一定的规则整合在一起，并且彼此之间互相连接。本质上，博客就是一堆按照一定的结构互相连接的网页的集合。 如果我们把博客平台比喻成一个房子，那么我们要建一个博客就差不多等于建一个房子，要建房子的第一要务就是：拿快递，哦不，是拿块地！注册了GitHub 1 之后，你就可以申请一块“地”，这块地英文叫做repository，中文被称为“仓库”或者“代码库”，GitHub会给你这块地分配一个全球唯一的IP地址，那就是你的门牌号码。 好了，有了地之后就可以开工了，这时你就会碰到一个问题，我想建一个什么风格的“房子”（博客平台）呢？“房子”的风格有很多可以选，mainTao的 hexo入门指南 对三种主流的博客平台：Ghost、JekyII和Hexo进行了逐一点评，最后告诉我们，Hexo是一个静态网页平台，逼格最高，最省事，也最安全（静态网站 2 ）。于是，什么都不懂的我们就很自然的选择了建一个Hexo风格的“房子”（博客平台）。 建房子总得打地基吧，可Hexo这个“房子”比较挑剔，它必须建在Node.js 3 的地基上面，不然就掀桌子不干。于是，我们还得去下载和安装Node.js。 还没完，由于你这块地是跟GitHub申请的，所以人家GitHub的“物业”说了，你要建房子可不能随随便便推个三轮车就进去，必须用他们家的“Git牌手推车”，不然老这么进进出出的谁知道你会不会压坏了人家的地砖呢，因此咱们还必须老老实实下载一个Git系统 4 （分布式版本控制系统），乖乖领个车。 上面这些话转换成示意图如下所示： ok，建站的思路我们就捋出来了： 拿块地：注册和配置GitHub打地基：安装Node.js领个车：安装Git建房子：安装和配置Hexo 第一步：拿块地！注册和配置GitHub。这里完全复制 崔斯特先生 的教程： 首先注册、登录 https://github.com/记住自己的Username（很重要）然后右上角选择 Create a new repository https://github.com/newRepository name 填自己的名字 http://yourname.github.io(yourname与你的注册用户名一致,这个就是你博客的域名了)例如，我的域名是http://github.com/zhihuya，就填入http://zhihuya.github.io。成功后出现下面的画面。 第二步&amp;第三步：打地基和领个车！安装Node.js和Git这里又是复制 崔斯特先生 的教程： 安装 Node.js 下载后安装，一路next就好。 安装 Git waylau/git-for-win: Git for Windows. 国内直接从官网下载比较困难，需要翻墙。这里提供一个国内的 下载站，方便网友下载 安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，名称和邮箱是Github上的 慢着！这两个指令什么意思？很好，我灰常欣赏这种打破砂锅问到底的孩子！ 初次运行Git的时候，程序员们要配置一下工作环境，这两个指令的意思就是告诉Git，这个电脑提交的任何改动都是小弟我本人做的，我行不改名坐不改姓，就是XXX之类的意思，这些记录都会是永久记录的。详见人家的 官方文档 第四步：建房子！安装和配置Hexo首先，在打开的Git界面上，输入如下的语句并按下回车： $ npm install -g hexo-cli 这句话的意思就是告诉npm（整合在Node.js里面的一种工具），安装hexo-cli。至于”-g”是什么意思，安装hexo不就好了，为什么要用hexo-cli，嗯，我不知道……希望看到这篇文章的程序员朋友们能解答一下吧。 等待了一段时间之后，你就会看到下图这个样子的一堆英文跑出来，说明建站的基础工作你已经做完了。 这时你可以站起来伸伸懒腰，休息一下，我们已经完成了房子的建设工作，接下来就是内部装潢了。 第五步：内部装潢！设置和配置博客平心而论，这部分内容我确实没有 崔斯特先生 写的详细，因此以下内容全部照搬。 先在你希望存放本地博客文件的地方新建一个文件夹，最好用英文命名，谁知道中文会出现什么问题呢，新建文件夹之后，在这个位置点击鼠标右键，选择 Git bash here。 因为我有安装Cmder，没有安装的点击“在此处打开命令窗口”，输入 hexo init blog 稍微等待下，速度有点慢。成功提示 INFO Start blogging with Hexo! 因为你初始化hexo 之后source目录下自带一篇hello world文章, 所以直接执行下方命令 $ hexo generate # 启动本地服务器 $ hexo server # 在浏览器输入 http://localhost:4000/就可以看见网页和模板了 INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 访问\\http://localhost:4000/\\，便可以看到网站初步的模样，不要激动，我们还要把网页发布到Github上去。 第六步：申请域名、发表文章、更换主题、添加评论 etc…… 脚注1 GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。GitHub 于 2008 年 4 月 10 日正式上线，除了 Git 代码仓库托管及基本的 Web 管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过350万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。↩ 2 静态网站：静态网站是指全部由HTML（标准通用标记语言的子集）代码格式页面组成的网站，所有的内容包含在网页文件中。网页上也可以出现各种视觉动态效果，如GIF动画、FLASH动画、滚动字幕等，而网站主要是静态化的页面和代码组成，一般文件名均以htm、html、shtml等为后缀 。每个静态网页都有一个固定的网址，文件名均以htm、html、shtml等为后缀； 静态网页一经发布到服务器上，无论是否被访问，都是一个独立存在的文件； 静态网页的内容相对稳定，不含特殊代码，因此容易被搜索引擎检索；html更加适合SEO搜索引擎优化。 静态网站没有数据库的支持，在网站制作和维护方面工作量较大； 由于不需通过数据库工作，所以静态网页的访问速度比较快。↩ 3 Node.js是一个Javascript运行环境(runtime)。实际上它是对Google V8引擎进行了封装。V8引 擎执行Javascript的速度非常快，性能非常好。Node.js对一些特殊用例进行了优化，提供了替代的API，使得V8在非浏览器环境下运行得更好。 ↩ 4 Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git 是 Linus Torvalds（Linux的开发者）为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Torvalds 开始着手开发 Git 是为了作为一种过渡方案来替代 BitKeeper，后者之前一直是 Linux 内核开发人员在全球使用的主要源代码工具。开放源码社区中的有些人觉得BitKeeper 的许可证并不适合开放源码社区的工作，因此 Torvalds 决定着手研究许可证更为灵活的版本控制系统。尽管最初 Git 的开发是为了辅助 Linux 内核开发的过程，但是我们已经发现在很多其他自由软件项目中也使用了 Git。↩","categories":[{"name":"心得笔记","slug":"心得笔记","permalink":"http://yoursite.com/categories/心得笔记/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"http://yoursite.com/tags/GitHub/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"建站","slug":"建站","permalink":"http://yoursite.com/tags/建站/"}]},{"title":"hello world again","slug":"hello-world-again","date":"2017-03-01T15:42:22.000Z","updated":"2017-03-04T16:57:05.853Z","comments":true,"path":"2017/03/01/hello-world-again/","link":"","permalink":"http://yoursite.com/2017/03/01/hello-world-again/","excerpt":"这是第一篇自己部署博客之后发布的文章按耐不住自己兴奋的心情 ##连markdown语句有有点乱用的倾向了 好了，我觉得应该可以结束了。","text":"这是第一篇自己部署博客之后发布的文章按耐不住自己兴奋的心情 ##连markdown语句有有点乱用的倾向了 好了，我觉得应该可以结束了。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-03-01T15:00:19.276Z","updated":"2017-03-04T16:56:56.298Z","comments":true,"path":"2017/03/01/hello-world/","link":"","permalink":"http://yoursite.com/2017/03/01/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}